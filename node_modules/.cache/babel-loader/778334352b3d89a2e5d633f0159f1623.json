{"ast":null,"code":"var _jsxFileName = \"/home/bbollen23/rta-application/src/components/stackedBarChart.js\";\nimport * as d3 from 'd3';\nimport React, { useState, useEffect } from 'react';\nimport useWindowDimensions from '../utility/windowDimensions';\nimport wrap from '../utility/wordWrap';\n\nconst StackedBarChart = props => {\n  const svgId = \"stacked-barChart-\" + props.id;\n  const [viewWidth, viewHeight] = useWindowDimensions();\n  const height = 0.35 * viewHeight;\n  const width = 0.55 * viewWidth;\n  const innerHeight = height * 0.85;\n  const innerWidth = width * 0.8;\n  const [data, setData] = useState([{\n    'concept': 'Multiplying 3-Digit Numbers',\n    '0': 20,\n    '1': 15,\n    '2': 18,\n    '3': 27,\n    '4': 20\n  }, {\n    'concept': 'Unknown Numbers in Multiplication',\n    '0': 10,\n    '1': 21,\n    '2': 16,\n    '3': 10,\n    '4': 43\n  }, {\n    'concept': 'Multiplying Fractions',\n    '0': 0,\n    '1': 22,\n    '2': 25,\n    '3': 15,\n    '4': 38\n  }, {\n    'concept': 'Reducing Fractions',\n    '0': 10,\n    '1': 15,\n    '2': 15,\n    '3': 15,\n    '4': 45\n  }, {\n    'concept': 'Properties of Operations',\n    '0': 5,\n    '1': 5,\n    '2': 6,\n    '3': 34,\n    '4': 50\n  }, {\n    'concept': 'Factors & Divisibility',\n    '0': 2,\n    '1': 11,\n    '2': 7,\n    '3': 60,\n    '4': 20\n  }, {\n    'concept': 'Comparing and Separating WP',\n    '0': 12,\n    '1': 10,\n    '2': 11,\n    '3': 50,\n    '4': 17\n  }, {\n    'concept': 'Multiplication & Division WP',\n    '0': 8,\n    '1': 21,\n    '2': 12,\n    '3': 47,\n    '4': 12\n  }, {\n    'concept': 'Equal Groups WP',\n    '0': 8,\n    '1': 10,\n    '2': 20,\n    '3': 55,\n    '4': 7\n  }]);\n\n  var renderChart = () => {\n    var _id = svgId;\n\n    var _svg = d3.select(\"#\" + _id);\n\n    var stack = d3.stack().keys(['0', '1', '2', '3', '4']).order(d3.stackOrderNone).offset(d3.stackOffsetNone);\n    var series = stack(data, d => d.concept);\n    console.log(series);\n    var color = d3.scaleOrdinal(d3.schemeBlues[6]).domain(series.map(s => s.key));\n\n    var _concepts = data.map(d => d.concept);\n\n    var _yRange = data.map((d, i) => innerHeight - i * (innerHeight / data.length)); //The series above genereates a two dimensional array with the beginning and ends of each rectangle. \n\n\n    var _yScale = d3.scaleBand().domain(_concepts).rangeRound([innerHeight, 0]).padding(0.2);\n\n    var _xScale = d3.scaleLinear().domain([0, 100]).range([0, innerWidth]); //takes in the actual values\n\n\n    var _groups = _svg.selectAll('.group').data(series);\n\n    var _bars = _groups.enter().append('g').attr('class', 'group').attr('fill', (d, i) => {\n      return color(i + 1);\n    }).selectAll('.rect').data(d => d);\n\n    var _percentages = _groups.enter().append('g').attr('class', 'group').selectAll('.percent-text').data(d => d);\n\n    function getRandomInt(max) {\n      return Math.floor(Math.random() * Math.floor(max - 700) + 700);\n    }\n\n    var _randomArray = [getRandomInt(1250), getRandomInt(1250), getRandomInt(1250), getRandomInt(1250), getRandomInt(1250), getRandomInt(1250), getRandomInt(1250), getRandomInt(1250), getRandomInt(1250)];\n    var inc = 0;\n\n    _bars.enter().append('rect').attr('x', 200).attr('y', (d, i) => _yScale(_concepts[i]) + 30).attr('height', _yScale.bandwidth()).attr('stroke-width', 1).attr('stroke', 'rgb(125,125,125)').transition().duration((d, i) => {\n      return _randomArray[i % 9];\n    }).attr('x', d => _xScale(d[0]) + 200).attr('width', d => {\n      return _xScale(d[1] - d[0]);\n    });\n\n    _percentages.enter().append(\"text\").attr('x', 200).attr('y', (d, i) => _yScale(_concepts[i]) + 48).attr('class', 'percentage-value').attr('height', _yScale.bandwidth()).transition().duration((d, i) => {\n      return _randomArray[i % 9];\n    }).attr('x', d => _xScale(d[1]) + 155).text((d, i) => {\n      let value = d.data[Math.floor(inc / 9)];\n      inc = inc + 1;\n      return value + \"%\";\n    });\n\n    _svg.append('g').attr('class', 'y-axis').attr('transform', 'translate(200,30)').call(d3.axisLeft(_yScale)).selectAll(\".tick text\").call(wrap, 200);\n  };\n\n  useEffect(() => {\n    renderChart();\n    return function cleanup() {\n      d3.selectAll(\"#\" + svgId + \" > *\").remove();\n    };\n  }, [viewWidth, viewHeight]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"0px 20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    id: svgId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default StackedBarChart;","map":{"version":3,"sources":["/home/bbollen23/rta-application/src/components/stackedBarChart.js"],"names":["d3","React","useState","useEffect","useWindowDimensions","wrap","StackedBarChart","props","svgId","id","viewWidth","viewHeight","height","width","innerHeight","innerWidth","data","setData","renderChart","_id","_svg","select","stack","keys","order","stackOrderNone","offset","stackOffsetNone","series","d","concept","console","log","color","scaleOrdinal","schemeBlues","domain","map","s","key","_concepts","_yRange","i","length","_yScale","scaleBand","rangeRound","padding","_xScale","scaleLinear","range","_groups","selectAll","_bars","enter","append","attr","_percentages","getRandomInt","max","Math","floor","random","_randomArray","inc","bandwidth","transition","duration","text","value","call","axisLeft","cleanup","remove"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\nimport React, {useState, useEffect} from 'react';\n\nimport useWindowDimensions from '../utility/windowDimensions';\nimport wrap from '../utility/wordWrap';\n\n\n\nconst StackedBarChart = props => {\n  const svgId = \"stacked-barChart-\" + props.id; \n\n  const [viewWidth, viewHeight] = useWindowDimensions();\n  const height = 0.35*viewHeight;\n  const width = 0.55*viewWidth;\n  const innerHeight = height*0.85;\n  const innerWidth = width*0.8;\n\n\n  const [data, setData] = useState([{'concept':'Multiplying 3-Digit Numbers','0':20,'1':15,'2':18,'3':27,'4':20},\n  {'concept':'Unknown Numbers in Multiplication','0':10,'1':21,'2':16,'3':10,'4':43},\n  {'concept':'Multiplying Fractions','0':0,'1':22,'2':25,'3':15,'4':38},\n  {'concept':'Reducing Fractions','0':10,'1':15,'2':15,'3':15,'4':45},\n  {'concept':'Properties of Operations','0':5,'1':5,'2':6,'3':34,'4':50},\n  {'concept':'Factors & Divisibility','0':2,'1':11,'2':7,'3':60,'4':20},\n  {'concept':'Comparing and Separating WP','0':12,'1':10,'2':11,'3':50,'4':17},\n  {'concept':'Multiplication & Division WP','0':8,'1':21,'2':12,'3':47,'4':12},\n  {'concept':'Equal Groups WP','0':8,'1':10,'2':20,'3':55,'4':7}])\n\n  var renderChart = () => {\n    var _id = svgId;\n\n    var _svg = d3.select(\"#\"+_id)\n\n    var stack = d3.stack().keys(['0','1','2','3','4']).order(d3.stackOrderNone).offset(d3.stackOffsetNone);\n    \n    var series = stack(data,d=>d.concept)\n\n    console.log(series);\n\n    var color = d3.scaleOrdinal(d3.schemeBlues[6])\n    .domain(series.map(s => s.key)); \n\n\n    var _concepts = data.map(d=>d.concept); \n    var _yRange = data.map((d,i)=>innerHeight-(i*(innerHeight/data.length)));\n    \n    //The series above genereates a two dimensional array with the beginning and ends of each rectangle. \n\n    var _yScale = d3.scaleBand().domain(_concepts).rangeRound([innerHeight,0]).padding(0.2)\n    var _xScale = d3.scaleLinear().domain([0,100]).range([0,innerWidth]) //takes in the actual values\n\n\n    var _groups = _svg.selectAll('.group').data(series);\n\n    var _bars = _groups.enter().append('g').attr('class','group').attr('fill',(d,i)=>{return color(i+1)}).selectAll('.rect').data(d=>d);\n\n    var _percentages = _groups.enter().append('g').attr('class','group').selectAll('.percent-text').data(d=>d);\n\n\n    function getRandomInt(max) {\n      return Math.floor(Math.random() * Math.floor(max-700)+700);\n    }\n\n    var _randomArray = [getRandomInt(1250),getRandomInt(1250),getRandomInt(1250),getRandomInt(1250),getRandomInt(1250),getRandomInt(1250),getRandomInt(1250),getRandomInt(1250),getRandomInt(1250)]\n\n    var inc = 0; \n    _bars.enter().append('rect')\n      .attr('x',200)\n      .attr('y',(d,i)=>_yScale(_concepts[i])+30)\n      .attr('height',_yScale.bandwidth())\n      .attr('stroke-width',1)\n      .attr('stroke','rgb(125,125,125)')\n    .transition()\n      .duration((d,i)=>{return _randomArray[i%9]})\n      .attr('x',d=>_xScale(d[0])+200)\n      .attr('width',d=>{return _xScale(d[1]-d[0])})\n\n    _percentages.enter().append(\"text\")\n      .attr('x',200)\n      .attr('y',(d,i)=>_yScale(_concepts[i])+48)\n      .attr('class','percentage-value')\n      .attr('height',_yScale.bandwidth())\n    .transition()\n      .duration((d,i)=>{return _randomArray[i%9]})\n      .attr('x',d=>_xScale(d[1])+155)\n      .text((d,i)=>{\n        let value = d.data[Math.floor(inc/9)]\n        inc = inc + 1;\n        return value + \"%\";\n      })\n\n    _svg.append('g')\n      .attr('class','y-axis')\n      .attr('transform','translate(200,30)' )\n      .call(d3.axisLeft(_yScale))\n    .selectAll(\".tick text\")\n      .call(wrap,200);\n\n  }\n\n  useEffect(()=>{\n    renderChart();\n    return function cleanup(){\n      d3.selectAll(\"#\" + svgId + \" > *\").remove();\n    }\n  },[viewWidth,viewHeight])\n\n  return(\n    <div style={{padding:\"0px 20px\"}}>\n      <svg width={width} height={height} id={svgId}/>\n    </div>\n  )\n}\n\n\n\nexport default StackedBarChart;"]},"metadata":{},"sourceType":"module"}