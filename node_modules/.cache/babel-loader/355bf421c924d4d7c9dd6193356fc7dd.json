{"ast":null,"code":"var _jsxFileName = \"/home/bbollen23/rta-application/src/components/radarChart.js\";\nimport * as d3 from 'd3';\nimport React, { useState, useEffect } from 'react';\nimport wrap from '../utility/wordWrap';\nimport useWindowDimensions from '../utility/windowDimensions';\nexport default function RadarChart(props) {\n  const svgId = \"radarChart-\" + props.id,\n        radarRange = [0, 1, 2, 3, 4, 5];\n  const [viewWidth, viewHeight] = useWindowDimensions(); // const height = 400;\n\n  let value = 0.88 / 6;\n  const width = viewWidth * value * 2 - 150; //1/3 of the available 0.88 space\n\n  const radius = (width - 170) / 10; //Words are wrappe to fit into 80 pixels --> two sets means 160,added 10 for buffer zone\n\n  const height = viewHeight * value * 2 + 100; // const radarCategories = ['Operations of Arithmetic', 'Addition of Mixed Numbers', 'Sovling Equations by Inspection', 'Subtraction of Fractions', 'Long Division','Evaluating Equations', 'Comparing and Ordering Integers', 'Fractional Parts WP', 'Multiplication & Division WP'];\n\n  const radarCategories = ['Multiplying 3-Digit Numbers', 'Unknown Numbers in Multiplication', 'Multiplying Fractions', 'Reducing Fractions', 'Properties of Operations', 'Factors & Divisibility', 'Comparing and Separating WP', 'Multiplication & Division WP', 'Equal Groups WP']; // const colors = d3.schemeSet3;\n  // const colors = d3.schemeCategory10;\n  // const colors = d3.schemePaired;\n  // const colors = d3.interpolateCool;\n\n  const colors = d3.interpolatePuBu; //  const colors = d3.interpolateRainbow;\n\n  const radarValues = [// [2,4,0,0,0,0,0,0,0],\n  // [2,4,4,3,0,0,0,0,0],\n  // [2,4,4,3,3,2,0,0,0],\n  // [2,4,4,3,3,2,1,0,0],\n  // [2,4,4,3,3,2,1,5,0],\n  // [2,4,4,3,3,2,1,5,5],\n  [2, 2.2, 3.1, 3.5, 2, 1, 3.3, 0.6, 3], [2.4, 2.2, 3.4, 3.9, 2, 1, 5, 1.1, 3.5], [2.4, 2.2, 3.8, 4, 2, 1, 5, 1.6, 3.9], [2.9, 2.7, 3.7, 4, 2, 1, 5, 1.9, 4.3], [3.3, 3.2, 4, 4, 2, 1, 5, 2.2, 4.7], [3.4, 3.7, 4.2, 4, 2, 1, 5, 2.4, 4.7], [3.9, 4, 4.2, 4, 2, 1.2, 5, 2.9, 4.7], [4, 4, 4.2, 4, 2, 1.4, 5, 3.4, 4.7], [4, 4, 4.2, 4, 2, 1.9, 5, 3.8, 4.7], [4, 4, 4.3, 4, 2.5, 2.4, 5, 4, 4.7], [4, 4, 4.4, 4, 3, 2.9, 5, 4, 4.7], [4, 4, 4.4, 4, 3.5, 3.3, 5, 4, 4.7]];\n\n  const renderGridLines = () => {\n    let _categories = radarCategories;\n\n    let _centerX = width * 0.5;\n\n    let _centerY = height * 0.5;\n\n    let _svg = d3.select(\"#\" + svgId);\n\n    let _points = [],\n        _gridLines = [],\n        _labels = [];\n    let n = _categories.length;\n    let inc = 2 * Math.PI / n;\n\n    for (let i = 0; i < n; i++) {\n      _points.push({\n        x: Math.cos(i * inc - Math.PI / 2),\n        y: Math.sin(i * inc - Math.PI / 2)\n      });\n    }\n\n    for (let j = 0; j < n; j++) {\n      let start = _points[j],\n          end = j === n - 1 ? _points[0] : _points[j + 1];\n      let K = radarRange.length;\n\n      for (let k = 1; k < K; k++) {\n        _gridLines.push({\n          x1: start.x * radius * k + _centerX,\n          y1: start.y * radius * k + _centerY,\n          x2: end.x * radius * k + _centerX,\n          y2: end.y * radius * k + _centerY\n        });\n      }\n\n      _gridLines.push({\n        x1: _centerX,\n        y1: _centerY,\n        x2: end.x * radius * (K - 1) + _centerX,\n        y2: end.y * radius * (K - 1) + _centerY\n      });\n\n      _labels.push({\n        text: _categories[j],\n        x: end.x * radius * (K - 1) * 1.3 + _centerX,\n        y: end.y * radius * (K - 1) * 1.3 + _centerY\n      });\n    }\n\n    let gridLines = _svg.selectAll('.line').data(_gridLines);\n\n    let labels = _svg.selectAll('.label').data(_labels);\n\n    gridLines.enter().append('line').attr('class', 'grid-line').attr('stroke-width', '1').attr('x1', d => d.x1).attr('x2', d => d.x2).attr('y1', d => d.y1).attr('y2', d => d.y2);\n    labels.enter().append('text').attr('class', 'label').attr('x', d => d.x).attr('y', d => d.y).attr('text-anchor', 'middle').text(d => d.text).call(wrap, 80);\n  };\n\n  const renderChart = (color, values, index, end) => {\n    let _values = values;\n\n    let _centerX = width * 0.5;\n\n    let _centerY = height * 0.5;\n\n    let _color = color;\n\n    let _svg = d3.select(\"#\" + svgId);\n\n    let _points = [],\n        _polyGonPoints = [];\n    let n = _values.length;\n    let inc = 2 * Math.PI / n;\n\n    for (let i = 0; i < n; i++) {\n      _points.push({\n        x: Math.cos(i * inc - Math.PI / 2),\n        y: Math.sin(i * inc - Math.PI / 2)\n      });\n    }\n\n    for (let m = 0; m < n; m++) {\n      let _point = _points[m];\n\n      _polyGonPoints.push({\n        x: _point.x * radius * _values[m] + _centerX,\n        y: _point.y * radius * _values[m] + _centerY\n      });\n    }\n\n    let chart = _svg.selectAll(\".chart\").data([_polyGonPoints]);\n\n    let vertices = _svg.selectAll('.chart-vertices').data(_polyGonPoints);\n\n    chart.enter().append(\"polygon\").attr('class', 'chartPoly').attr(\"points\", function (d) {\n      return d.map(function (d) {\n        return [d.x, d.y].join(\",\");\n      }).join(\" \");\n    }).attr('stroke-opacity', 0).attr(\"stroke\", 'white').attr(\"stroke-width\", 1).attr(\"fill\", _color).attr(\"fill-opacity\", d => index + 1 === end ? 0.7 : 0.7) // .attr(\"fill-opacity\",0.3)\n    .transition().duration(300).attr('stroke-opacity', 1); // vertices.enter().append('circle')\n    // .attr('cx',d=>d.x)\n    // .attr('cy',d=>d.y)\n    // .attr('r',2)\n    // .attr('fill',\"#ced1d8\")\n  };\n\n  useEffect(() => {\n    renderGridLines();\n    let [start, end] = props.days;\n\n    if (!props.lock) {\n      for (let i = end - 1; i >= start - 1; i--) {\n        let value = radarValues[i]; // let color = colors[i%12]\n\n        let color = colors(0.4 * (i / 12) + 0.6);\n        renderChart(color, value, i, end);\n      }\n    } else {\n      // let colorStart = colors[(start-1)%12]\n      // let colorEnd = colors[(end-1)%12]\n      let colorStart = colors(0.4 * ((start - 1) / 12) + 0.6);\n      let colorEnd = colors(0.4 * ((end - 1) / 12) + 0.6);\n      renderChart(colorEnd, radarValues[end - 1], end - 1, end);\n      renderChart(colorStart, radarValues[start - 1], start - 1, end);\n    } // renderChart(colors[(start-1)%12],radarValues[start-1],start-1,end);\n    // renderChart(colors[(end-1)%12],radarValues[end-1],end-1,end);\n\n\n    return function cleanup() {\n      d3.selectAll(\"#\" + svgId + \" > *\").remove();\n    };\n  }, [props.days, props.lock]);\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    id: svgId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/home/bbollen23/rta-application/src/components/radarChart.js"],"names":["d3","React","useState","useEffect","wrap","useWindowDimensions","RadarChart","props","svgId","id","radarRange","viewWidth","viewHeight","value","width","radius","height","radarCategories","colors","interpolatePuBu","radarValues","renderGridLines","_categories","_centerX","_centerY","_svg","select","_points","_gridLines","_labels","n","length","inc","Math","PI","i","push","x","cos","y","sin","j","start","end","K","k","x1","y1","x2","y2","text","gridLines","selectAll","data","labels","enter","append","attr","d","call","renderChart","color","values","index","_values","_color","_polyGonPoints","m","_point","chart","vertices","map","join","transition","duration","days","lock","colorStart","colorEnd","cleanup","remove"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\nimport React,{useState,useEffect} from 'react';\n\nimport wrap from '../utility/wordWrap';\nimport useWindowDimensions from '../utility/windowDimensions';\n\n\nexport default function RadarChart(props){\n  const svgId = \"radarChart-\" + props.id, radarRange = [0,1,2,3,4,5]\n\n  const [viewWidth, viewHeight] = useWindowDimensions();\n  // const height = 400;\n\n  let value = 0.88/6;\n  const width = viewWidth*value*2-150; //1/3 of the available 0.88 space\n  const radius = (width - 170)/10; //Words are wrappe to fit into 80 pixels --> two sets means 160,added 10 for buffer zone\n  const height = viewHeight*value*2+100;\n\n  // const radarCategories = ['Operations of Arithmetic', 'Addition of Mixed Numbers', 'Sovling Equations by Inspection', 'Subtraction of Fractions', 'Long Division','Evaluating Equations', 'Comparing and Ordering Integers', 'Fractional Parts WP', 'Multiplication & Division WP'];\n\n  const radarCategories = ['Multiplying 3-Digit Numbers','Unknown Numbers in Multiplication','Multiplying Fractions','Reducing Fractions','Properties of Operations','Factors & Divisibility','Comparing and Separating WP','Multiplication & Division WP','Equal Groups WP']\n\n\n  // const colors = d3.schemeSet3;\n  // const colors = d3.schemeCategory10;\n  // const colors = d3.schemePaired;\n\n  // const colors = d3.interpolateCool;\n  const colors = d3.interpolatePuBu;\n  //  const colors = d3.interpolateRainbow;\n\n\n\n  const radarValues = [\n    // [2,4,0,0,0,0,0,0,0],\n    // [2,4,4,3,0,0,0,0,0],\n    // [2,4,4,3,3,2,0,0,0],\n    // [2,4,4,3,3,2,1,0,0],\n    // [2,4,4,3,3,2,1,5,0],\n    // [2,4,4,3,3,2,1,5,5],\n\n\n    [2,  2.2,3.1,3.5,2  ,1  ,3.3,0.6,3  ],\n    [2.4,2.2,3.4,3.9,2  ,1  ,5  ,1.1,3.5],\n    [2.4,2.2,3.8,4  ,2  ,1  ,5  ,1.6,3.9],\n    [2.9,2.7,3.7,4  ,2  ,1  ,5  ,1.9,4.3],\n    [3.3,3.2,4  ,4  ,2  ,1  ,5  ,2.2,4.7],\n    [3.4,3.7,4.2,4  ,2  ,1  ,5  ,2.4,4.7],\n    [3.9,4  ,4.2,4  ,2  ,1.2,5  ,2.9,4.7],\n    [4  ,4  ,4.2,4  ,2  ,1.4,5  ,3.4,4.7],\n    [4  ,4  ,4.2,4  ,2  ,1.9,5  ,3.8,4.7],\n    [4  ,4  ,4.3,4  ,2.5,2.4,5  ,4  ,4.7],\n    [4  ,4  ,4.4,4  ,3  ,2.9,5  ,4  ,4.7],\n    [4  ,4  ,4.4,4  ,3.5,3.3,5  ,4  ,4.7],\n\n  ];\n\n\n  const renderGridLines = () => {\n    let _categories = radarCategories;\n    let _centerX = width*0.5;\n    let _centerY = height*0.5;\n\n    let _svg = d3.select(\"#\" + svgId);\n\n    let _points = [],_gridLines = [],_labels=[];\n\n    let n = _categories.length;\n\n    let inc = (2*Math.PI)/n;\n\n    for(let i = 0; i < n;i++){\n      _points.push({\n        x:Math.cos(i*inc-(Math.PI/2)),\n        y:Math.sin(i*inc-(Math.PI/2))\n      });\n    }\n\n    for(let j = 0; j < n;j++){\n      let start = _points[j],end = j === (n-1) ? _points[0] : _points[j+1];\n      let K = radarRange.length;\n      for(let k = 1; k < K; k++){\n        _gridLines.push({\n          x1:start.x*radius*k + _centerX,\n          y1:start.y*radius*k + _centerY,\n          x2:end.x*radius*k + _centerX,\n          y2:end.y*radius*k + _centerY})\n      }\n\n\n      _gridLines.push({\n        x1:_centerX,\n        y1:_centerY,\n        x2:end.x*radius*(K-1) + _centerX,\n        y2:end.y*radius*(K-1) + _centerY\n      })\n\n      _labels.push({\n        text:_categories[j],\n        x:end.x*radius*(K-1)*1.3 + _centerX,\n        y:end.y*radius*(K-1)*1.3 + _centerY,\n      })\n    }\n\n    let gridLines = _svg.selectAll('.line').data(_gridLines);\n    let labels = _svg.selectAll('.label').data(_labels);\n\n    gridLines.enter().append('line').attr('class','grid-line').attr('stroke-width','1').attr('x1',d=>d.x1).attr('x2',d=>d.x2).attr('y1',d=>d.y1).attr('y2',d=>d.y2);\n\n    labels.enter().append('text').attr('class','label').attr('x',d=>d.x).attr('y',d=>d.y).attr('text-anchor','middle').text(d=>d.text).call(wrap,80)\n\n  }\n\n\n  const renderChart = (color,values,index,end) => {\n\n    let _values = values;\n    let _centerX = width*0.5;\n    let _centerY = height*0.5;\n    let _color = color;\n\n    let _svg = d3.select(\"#\" + svgId);\n\n    let _points = [], _polyGonPoints=[];\n\n    let n = _values.length;\n\n    let inc = (2*Math.PI)/n;\n\n    for(let i = 0; i < n;i++){\n      _points.push({\n        x:Math.cos(i*inc-(Math.PI/2)),\n        y:Math.sin(i*inc-(Math.PI/2))\n      });\n    }\n\n\n    for(let m = 0; m < n; m++){\n      let _point = _points[m];\n      _polyGonPoints.push({\n        x:_point.x*radius*_values[m] + _centerX,\n        y:_point.y*radius*_values[m] + _centerY\n      })\n    }\n\n    let chart = _svg.selectAll(\".chart\").data([_polyGonPoints]);\n    let vertices = _svg.selectAll('.chart-vertices').data(_polyGonPoints);\n\n    chart.enter().append(\"polygon\").attr('class','chartPoly')\n    .attr(\"points\",function(d) { \n        return d.map(function(d) {\n            return [d.x,d.y].join(\",\");\n        }).join(\" \");\n    })\n    .attr('stroke-opacity',0)\n    .attr(\"stroke\",'white')\n    .attr(\"stroke-width\",1)\n    .attr(\"fill\",_color)\n    .attr(\"fill-opacity\",d=>(index+1) === end ? 0.7 : 0.7)\n    // .attr(\"fill-opacity\",0.3)\n    .transition()\n    .duration(300)\n    .attr('stroke-opacity',1)\n\n    // vertices.enter().append('circle')\n    // .attr('cx',d=>d.x)\n    // .attr('cy',d=>d.y)\n    // .attr('r',2)\n    // .attr('fill',\"#ced1d8\")\n\n  }\n\n\n\n  useEffect(()=> {\n    renderGridLines();\n    let [start,end] = props.days;\n    if(!props.lock){\n      for(let i = end-1; i >= start-1 ; i --){\n        let value = radarValues[i];\n        // let color = colors[i%12]\n        let color = colors(0.4*(i/12)+0.6);\n        renderChart(color,value,i,end);\n      }  \n    } else{\n      // let colorStart = colors[(start-1)%12]\n      // let colorEnd = colors[(end-1)%12]\n\n      let colorStart = colors(0.4*((start-1)/12)+0.6)\n      let colorEnd = colors(0.4*((end-1)/12)+0.6)\n\n      renderChart(colorEnd,radarValues[end-1],end-1,end)\n      renderChart(colorStart,radarValues[start-1],start-1,end)\n    }\n    \n    // renderChart(colors[(start-1)%12],radarValues[start-1],start-1,end);\n    // renderChart(colors[(end-1)%12],radarValues[end-1],end-1,end);\n\n\n    return function cleanup(){\n      d3.selectAll(\"#\" + svgId + \" > *\").remove();\n    }\n  },[props.days,props.lock])\n\n  return(\n    <svg width={width} height={height} id={svgId}></svg>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}