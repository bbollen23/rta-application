{"ast":null,"code":"import * as d3 from 'd3';\nexport default function wrap(text, width) {\n  text.each(function () {\n    var text = d3.select(this),\n        words = text.text().split(/\\s+/).reverse(),\n        word,\n        line = [],\n        lineNumber = 0,\n        lineHeight = 1.1,\n        // ems\n    x = text.attr(\"x\"),\n        y = text.attr(\"y\"),\n        dy = 0,\n        //parseFloat(text.attr(\"dy\")),\n    tspan = text.text(null).append(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n    while (word = words.pop()) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n\n      if (tspan.node().getComputedTextLength() > width) {\n        line.pop();\n        tspan.text(line.join(\" \"));\n        line = [word];\n        tspan = text.append(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n      }\n    }\n  });\n}","map":{"version":3,"sources":["/home/bbollen23/rta-application/src/utility/wordWrap.js"],"names":["d3","wrap","text","width","each","select","words","split","reverse","word","line","lineNumber","lineHeight","x","attr","y","dy","tspan","append","pop","push","join","node","getComputedTextLength"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AAEA,eAAe,SAASC,IAAT,CAAcC,IAAd,EAAoBC,KAApB,EAA2B;AACtCD,EAAAA,IAAI,CAACE,IAAL,CAAU,YAAY;AACpB,QAAIF,IAAI,GAAGF,EAAE,CAACK,MAAH,CAAU,IAAV,CAAX;AAAA,QACEC,KAAK,GAAGJ,IAAI,CAACA,IAAL,GAAYK,KAAZ,CAAkB,KAAlB,EAAyBC,OAAzB,EADV;AAAA,QAEEC,IAFF;AAAA,QAGEC,IAAI,GAAG,EAHT;AAAA,QAIEC,UAAU,GAAG,CAJf;AAAA,QAKEC,UAAU,GAAG,GALf;AAAA,QAKoB;AAClBC,IAAAA,CAAC,GAAGX,IAAI,CAACY,IAAL,CAAU,GAAV,CANN;AAAA,QAOEC,CAAC,GAAGb,IAAI,CAACY,IAAL,CAAU,GAAV,CAPN;AAAA,QAQEE,EAAE,GAAG,CARP;AAAA,QAQU;AACRC,IAAAA,KAAK,GAAGf,IAAI,CAACA,IAAL,CAAU,IAAV,EACLgB,MADK,CACE,OADF,EAELJ,IAFK,CAEA,GAFA,EAEKD,CAFL,EAGLC,IAHK,CAGA,GAHA,EAGKC,CAHL,EAILD,IAJK,CAIA,IAJA,EAIME,EAAE,GAAG,IAJX,CATV;;AAcA,WAAOP,IAAI,GAAGH,KAAK,CAACa,GAAN,EAAd,EAA2B;AACzBT,MAAAA,IAAI,CAACU,IAAL,CAAUX,IAAV;AACAQ,MAAAA,KAAK,CAACf,IAAN,CAAWQ,IAAI,CAACW,IAAL,CAAU,GAAV,CAAX;;AACA,UAAIJ,KAAK,CAACK,IAAN,GAAaC,qBAAb,KAAuCpB,KAA3C,EAAkD;AAChDO,QAAAA,IAAI,CAACS,GAAL;AACAF,QAAAA,KAAK,CAACf,IAAN,CAAWQ,IAAI,CAACW,IAAL,CAAU,GAAV,CAAX;AACAX,QAAAA,IAAI,GAAG,CAACD,IAAD,CAAP;AACAQ,QAAAA,KAAK,GAAGf,IAAI,CAACgB,MAAL,CAAY,OAAZ,EACLJ,IADK,CACA,GADA,EACKD,CADL,EAELC,IAFK,CAEA,GAFA,EAEKC,CAFL,EAGLD,IAHK,CAGA,IAHA,EAGM,EAAEH,UAAF,GAAeC,UAAf,GAA4BI,EAA5B,GAAiC,IAHvC,EAILd,IAJK,CAIAO,IAJA,CAAR;AAKD;AACF;AACF,GA7BD;AA8BD","sourcesContent":["import * as d3 from 'd3';\n\nexport default function wrap(text, width) {\n    text.each(function () {\n      var text = d3.select(this),\n        words = text.text().split(/\\s+/).reverse(),\n        word,\n        line = [],\n        lineNumber = 0,\n        lineHeight = 1.1, // ems\n        x = text.attr(\"x\"),\n        y = text.attr(\"y\"),\n        dy = 0, //parseFloat(text.attr(\"dy\")),\n        tspan = text.text(null)\n          .append(\"tspan\")\n          .attr(\"x\", x)\n          .attr(\"y\", y)\n          .attr(\"dy\", dy + \"em\");\n      while (word = words.pop()) {\n        line.push(word);\n        tspan.text(line.join(\" \"));\n        if (tspan.node().getComputedTextLength() > width) {\n          line.pop();\n          tspan.text(line.join(\" \"));\n          line = [word];\n          tspan = text.append(\"tspan\")\n            .attr(\"x\", x)\n            .attr(\"y\", y)\n            .attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\")\n            .text(word);\n        }\n      }\n    });\n  }"]},"metadata":{},"sourceType":"module"}