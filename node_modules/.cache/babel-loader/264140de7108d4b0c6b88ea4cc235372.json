{"ast":null,"code":"var _jsxFileName = \"/home/bbollen23/rta-application/src/components/reportTable.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nconst columns = [{\n  id: 'day',\n  label: 'Day',\n  minWidth: 60,\n  align: 'left'\n}, {\n  id: 'date',\n  label: 'Date',\n  minWidth: 80,\n  align: 'left'\n}, {\n  id: 'tutorId',\n  label: 'Tutor',\n  minWidth: 100,\n  align: 'left'\n}, {\n  id: 'scoreUpdates',\n  label: 'Score Updates',\n  minWidth: 100,\n  align: 'left'\n} // { id: 'mastery', label: 'Above Mastery',minWidth:100,format:'boolean',align:'center'}\n];\nconst rows = [{\n  day: 'Day 12',\n  date: \"05/21/20\",\n  tutorId: {\n    id: 1,\n    name: \"Brian Bollen\"\n  },\n  scoreUpdates: [0.1, 0.2, 0.5]\n}, {\n  day: 'Day 11',\n  date: \"05/18/20\",\n  tutorId: {\n    id: 3,\n    name: \"Steven Petritis\"\n  },\n  scoreUpdates: [0.1, -0.1, 0.5]\n}, {\n  day: 'Day 10',\n  date: \"05/14/20\",\n  tutorId: {\n    id: 1,\n    name: \"Brian Bollen\"\n  },\n  scoreUpdates: [0, 0.2, 0.1]\n}, {\n  day: 'Day 9',\n  date: \"05/11/20\",\n  tutorId: {\n    id: 3,\n    name: \"Steven Petritis\"\n  },\n  scoreUpdates: [0.1, 0.2, 0.5]\n}, {\n  day: 'Day 8',\n  date: \"05/07/20\",\n  tutorId: {\n    id: 1,\n    name: \"Brian Bollen\"\n  },\n  scoreUpdates: [0.1, 0.2, 0.5]\n}, {\n  day: 'Day 7',\n  date: \"05/04/20\",\n  tutorId: {\n    id: 3,\n    name: \"Steven Petritis\"\n  },\n  scoreUpdates: [0.1, 0.2, 0.5]\n}, {\n  day: 'Day 6',\n  date: \"04/30/20\",\n  tutorId: {\n    id: 1,\n    name: \"Brian Bollen\"\n  },\n  scoreUpdates: [0.1, 0.2, 0.5]\n}, {\n  day: 'Day 5',\n  date: \"04/27/20\",\n  tutorId: {\n    id: 3,\n    name: \"Steven Petritis\"\n  },\n  scoreUpdates: [0.1, 0.2, 0.5]\n}, {\n  day: 'Day 4',\n  date: \"04/23/20\",\n  tutorId: {\n    id: 1,\n    name: \"Brian Bollen\"\n  },\n  scoreUpdates: [0.1, 0.2, 0.5]\n}, {\n  day: 'Day 3',\n  date: \"04/20/20\",\n  tutorId: {\n    id: 3,\n    name: \"Steven Petritis\"\n  },\n  scoreUpdates: [0.1, 0.2, 0.5]\n}, {\n  day: 'Day 2',\n  date: \"04/16/20\",\n  tutorId: {\n    id: 1,\n    name: \"Brian Bollen\"\n  },\n  scoreUpdates: [0.1, 0.2, 0.5]\n}, {\n  day: 'Day 1',\n  date: \"04/13/20\",\n  tutorId: {\n    id: 3,\n    name: \"Steven Petritis\"\n  },\n  scoreUpdates: [0.4, 0.5, 0.5]\n}];\nexport default function ReportTable(props) {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(3);\n\n  const handleReportOpen = () => {\n    props.setReportOpen(true);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: \"reports-table-root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: \"table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    } // classes={{root:classes.tableHeaderRoot}}\n    ,\n    className: \"table-header-root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      onClick: handleReportOpen,\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, columns.map(column => {\n      var value = row[column.id];\n\n      if (column.id === 'tutorId') {\n        // value = <Chip avatar={<Avatar src=\"/self_avatar.png\"/>}>Brian Bollen</Chip>\n        // value = value ? 'yes' : 'no'\n        return /*#__PURE__*/React.createElement(TableCell, {\n          className: \"table-cell-root\",\n          key: column.name,\n          align: column.align,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"table-cell\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Avatar, {\n          src: \"/self_avatar_\" + value.id + \".jpg\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            marginLeft: '8px',\n            fontSize: '18px',\n            fontWeight: 400\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }\n        }, value.name)));\n      } else if (column.id === 'scoreUpdates') {\n        return /*#__PURE__*/React.createElement(TableCell, {\n          className: \"table-cell-root\",\n          key: column.name,\n          align: column.align,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"table-cell\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 27\n          }\n        }, value.map(entry => {\n          if (entry > 0) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"score-update\",\n              style: {\n                color: 'green'\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 40\n              }\n            }, \"+\" + entry);\n          } else if (entry < 0) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"score-update\",\n              style: {\n                color: 'red'\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 40\n              }\n            }, entry);\n          } else {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"score-update\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 40\n              }\n            }, entry);\n          }\n        })));\n      }\n\n      return /*#__PURE__*/React.createElement(TableCell, {\n        className: \"table-cell-root\",\n        key: column.name,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 23\n        }\n      }, value);\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [3, 5, 10],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/bbollen23/rta-application/src/components/reportTable.js"],"names":["React","useState","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Chip","Avatar","columns","id","label","minWidth","align","rows","day","date","tutorId","name","scoreUpdates","ReportTable","props","page","setPage","rowsPerPage","setRowsPerPage","handleReportOpen","setReportOpen","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","map","column","slice","row","code","marginLeft","fontSize","fontWeight","entry","color","length"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst columns = [\n  { id: 'day', label: 'Day', minWidth: 60,align:'left'},\n  { id: 'date', label: 'Date', minWidth: 80,align:'left'},\n  { id: 'tutorId', label: 'Tutor', minWidth:100,align:'left'},\n  { id: 'scoreUpdates', label:'Score Updates', minWidth:100,align:'left'},\n  // { id: 'mastery', label: 'Above Mastery',minWidth:100,format:'boolean',align:'center'}\n];\n\nconst rows = [\n  {day:'Day 12', date:\"05/21/20\",tutorId:{id:1,name:\"Brian Bollen\"},scoreUpdates:[0.1,0.2,0.5]},\n  {day:'Day 11', date:\"05/18/20\",tutorId:{id:3,name:\"Steven Petritis\"},scoreUpdates:[0.1,-0.1,0.5]},\n  {day:'Day 10', date:\"05/14/20\",tutorId:{id:1,name:\"Brian Bollen\"},scoreUpdates:[0,0.2,0.1]},\n  {day:'Day 9', date:\"05/11/20\",tutorId:{id:3,name:\"Steven Petritis\"},scoreUpdates:[0.1,0.2,0.5]},\n  {day:'Day 8', date:\"05/07/20\",tutorId:{id:1,name:\"Brian Bollen\"},scoreUpdates:[0.1,0.2,0.5]},\n  {day:'Day 7', date:\"05/04/20\",tutorId:{id:3,name:\"Steven Petritis\"},scoreUpdates:[0.1,0.2,0.5]},\n  {day:'Day 6', date:\"04/30/20\",tutorId:{id:1,name:\"Brian Bollen\"},scoreUpdates:[0.1,0.2,0.5]},\n  {day:'Day 5', date:\"04/27/20\",tutorId:{id:3,name:\"Steven Petritis\"},scoreUpdates:[0.1,0.2,0.5]},\n  {day:'Day 4', date:\"04/23/20\",tutorId:{id:1,name:\"Brian Bollen\"},scoreUpdates:[0.1,0.2,0.5]},\n  {day:'Day 3', date:\"04/20/20\",tutorId:{id:3,name:\"Steven Petritis\"},scoreUpdates:[0.1,0.2,0.5]},\n  {day:'Day 2', date:\"04/16/20\",tutorId:{id:1,name:\"Brian Bollen\"},scoreUpdates:[0.1,0.2,0.5]},\n  {day:'Day 1', date:\"04/13/20\",tutorId:{id:3,name:\"Steven Petritis\"},scoreUpdates:[0.4,0.5,0.5]}\n];\n\n\n\nexport default function ReportTable(props) {\n  \n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(3);\n\n  const handleReportOpen = () => {\n    props.setReportOpen(true)\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className=\"reports-table-root\">\n      <TableContainer className=\"table-container\">\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                  // classes={{root:classes.tableHeaderRoot}}\n                  className=\"table-header-root\"\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return (\n                <TableRow onClick={handleReportOpen} hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                  {columns.map(column => {\n                    var value = row[column.id];\n                    if(column.id === 'tutorId'){\n                      // value = <Chip avatar={<Avatar src=\"/self_avatar.png\"/>}>Brian Bollen</Chip>\n                      // value = value ? 'yes' : 'no'\n                      return(\n                        <TableCell className=\"table-cell-root\" key={column.name} align={column.align}>\n                          <div className=\"table-cell\">\n                            <Avatar src={\"/self_avatar_\" + value.id +\".jpg\"}/>\n                            <div style={{marginLeft:'8px',fontSize:'18px',fontWeight:400}}>{value.name}</div>\n                          </div>\n                        </TableCell>\n                      )\n                    } else if (column.id === 'scoreUpdates'){\n                      return(\n                        <TableCell className=\"table-cell-root\" key={column.name} align={column.align}>\n                          <div className=\"table-cell\">\n                            {value.map(entry=>{\n                              if(entry > 0){\n                                return(<div className=\"score-update\" style={{color:'green'}}>{\"+\" + entry}</div>)\n                              } else if(entry < 0){\n                                return(<div className=\"score-update\" style={{color:'red'}}>{entry}</div>)\n                              } else {\n                                return(<div className=\"score-update\">{entry}</div>)\n                              }\n                            })}\n                          </div>\n                        </TableCell>\n                      )\n                    }\n                    return (\n                      <TableCell className=\"table-cell-root\" key={column.name} align={column.align}>\n                        {value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[3,5,10]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}"]},"metadata":{},"sourceType":"module"}